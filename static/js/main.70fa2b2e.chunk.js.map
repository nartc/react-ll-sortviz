{"version":3,"sources":["utils/Sort.ts","utils/Col.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["ALGORITHM_NAME_MAP","0","1","2","3","4","Col","height","canvasCtx","canvasWidth","Object","classCallCheck","this","width","color","MAX_COLS","createClass","key","value","index","beginPath","rect","fillStyle","fill","closePath","concat","draw","TIME","App","props","_this","possibleConstructorReturn","getPrototypeOf","call","_canvasRef","_canvasCtx","_frame","_arr","_oldVal","bubbleSort","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","array","i","length","_ref2","wrap","_context","prev","next","setState","count","sleep","JSON","stringify","stop","_x","apply","arguments","reverseSort","_ref3","_callee2","maxIndex","j","_context2","swapIndex","_x2","cocktailSort","_ref4","_callee3","left","right","_context3","_x3","insertionSort","_ref5","_callee4","el","_context4","_x4","selectionSort","_ref6","_callee5","minIndex","_context5","_x5","algorithmMap","time","Promise","resolve","setTimeout","oldIndex","newIndex","temp","sortChangedCallback","console","log","init","animate","prevClick","currentAlgorithmIndex","keys","nextClick","randomize","current","Math","random","isRunning","state","raf","window","requestAnimationFrame","clearRect","forEach","col","update","cancelAnimationFrame","push","React","createRef","getContext","_this$state","react_default","createElement","className","disabled","onClick","ref","innerWidth","innerHeight","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70fa2b2e.chunk.js","sourcesContent":["export const ALGORITHM_NAME_MAP = {\n  0: 'Bubble Sort',\n  1: 'Reverse Sort',\n  2: 'Cocktail Sort',\n  3: 'Insertion Sort',\n  4: 'Selection Sort'\n};\n","import { MAX_COLS } from \"../App\";\n\nexport class Col {\n    width: number;\n    color: string;\n    constructor(public height: number, public canvasCtx: CanvasRenderingContext2D, canvasWidth: number) {\n        this.width = canvasWidth / MAX_COLS;\n        this.color = '';\n    }\n\n    draw(index: number) {\n        this.canvasCtx.beginPath();\n        this.canvasCtx.rect(index * this.width, 0, this.width, this.height);\n        this.canvasCtx.fillStyle = this.color;\n        this.canvasCtx.fill();\n        this.canvasCtx.closePath();\n    }\n\n    update(index: number) {\n        this.color = `hsl(${index}, 100%, 50%)`;\n        this.draw(index);\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport { ALGORITHM_NAME_MAP } from './utils/Sort';\nimport { Col } from './utils/Col';\n\n// CONSTANTS\nexport const MAX_COLS = 500;\nconst TIME = 1000 / 100;\n\ntype AppProps = {};\n\ntype AppState = {\n  currentAlgorithmIndex: number;\n  count: number;\n  isRunning: boolean;\n};\n\nclass App extends React.Component<AppProps, AppState> {\n  private readonly _canvasRef: React.RefObject<HTMLCanvasElement>;\n  private _canvasCtx: CanvasRenderingContext2D;\n  private _frame: number = 0;\n  private _arr: Col[] = [];\n  private _oldVal: string = '';\n\n  constructor(props: AppProps) {\n    super(props);\n    this._canvasRef = React.createRef();\n    this.state = {\n      count: 0,\n      currentAlgorithmIndex: 0,\n      isRunning: false\n    };\n  }\n\n  bubbleSort = async (array: Col[]) => {\n    for (let i = 0, length = array.length - 1; i < length; i++) {\n      if (array[i].height < array[i + 1].height) {\n        [array[i], array[i + 1]] = [array[i + 1], array[i]];\n        this.setState(prev => ({ count: prev.count + 1 }));\n        await this.sleep(TIME);\n      }\n    }\n    this._oldVal = JSON.stringify(array);\n  };\n\n  reverseSort = async (array: Col[]) => {\n    let maxIndex: number;\n    const length = array.length;\n\n    for (let i = 0; i < length; i++) {\n      maxIndex = i;\n      for (let j = i + 1; j < length; j++) {\n        if (array[j].height > array[maxIndex].height) {\n          maxIndex = j;\n          this.swapIndex(array, i, maxIndex);\n          this.setState(prev => ({ count: prev.count + 1 }));\n          await this.sleep(TIME);\n        }\n      }\n    }\n\n    this._oldVal = JSON.stringify(array);\n  };\n\n  cocktailSort = async (array: Col[]) => {\n    let i;\n    let left = 0;\n    let right = array.length - 1;\n\n    while (left < right) {\n      for (i = left; i < right; i++) {\n        if (array[i].height < array[i + 1].height) {\n          this.swapIndex(array, i, i + 1);\n          this.setState(prev => ({ count: prev.count + 1 }));\n          await this.sleep(TIME);\n        }\n      }\n\n      right--;\n      for (i = right; i > left; i--) {\n        if (array[i - 1].height < array[i].height) {\n          this.swapIndex(array, i - 1, i);\n          this.setState(prev => ({ count: prev.count + 1 }));\n          await this.sleep(TIME);\n        }\n      }\n      left++;\n    }\n\n    this._oldVal = JSON.stringify(array);\n  };\n\n  insertionSort = async (array: Col[]) => {\n    let i: number;\n    let el: Col;\n    let j: number;\n    const length = array.length;\n\n    for (i = 1; i < length; i++) {\n      el = array[i];\n      j = i;\n\n      while (j > 0 && array[j - 1].height < el.height) {\n        array[j] = array[j - 1];\n        this.setState(prev => ({ count: prev.count + 1 }));\n        await this.sleep(TIME);\n        j--;\n      }\n\n      array[j] = el;\n    }\n\n    this._oldVal = JSON.stringify(array);\n  };\n\n  selectionSort = async (array: Col[]) => {\n    let minIndex: number;\n    for (let i = 0, length = array.length; i < length; i++) {\n      minIndex = i;\n      for (let j = i + 1; j < length; j++) {\n        if (array[j].height > array[minIndex].height) {\n          minIndex = j;\n          this.setState(prev => ({ count: prev.count + 1 }));\n          this.swapIndex(array, i, minIndex);\n          await this.sleep(TIME);\n        }\n      }\n    }\n\n    this._oldVal = JSON.stringify(array);\n  };\n\n  private algorithmMap = {\n    0: this.bubbleSort,\n    1: this.reverseSort,\n    2: this.cocktailSort,\n    3: this.insertionSort,\n    4: this.selectionSort\n  };\n\n  sleep = (time: number) => {\n    return new Promise(resolve => setTimeout(resolve, time));\n  };\n\n  swapIndex = (array: Col[], oldIndex: number, newIndex: number) => {\n    const temp = array[oldIndex];\n    array[oldIndex] = array[newIndex];\n    array[newIndex] = temp;\n  };\n\n  componentDidMount() {\n    this._canvasCtx = (this._canvasRef.current as HTMLCanvasElement).getContext('2d') as CanvasRenderingContext2D;\n    this.init();\n    this.animate();\n  }\n\n  sortChangedCallback = () => {\n    console.log('callback');\n    this.init();\n    this.animate();\n  };\n\n  prevClick = () => {\n    this.setState(prev => (\n      {\n        currentAlgorithmIndex: (prev.currentAlgorithmIndex - 1 + Object.keys(this.algorithmMap).length) % Object.keys(this.algorithmMap).length,\n        count: 0\n      }\n    ), this.sortChangedCallback);\n  };\n\n  nextClick = () => {\n    this.setState(prev => (\n      {\n        currentAlgorithmIndex: (prev.currentAlgorithmIndex + 1) % Object.keys(this.algorithmMap).length,\n        count: 0\n      }\n    ), this.sortChangedCallback);\n  };\n\n  randomize = () => {\n    return ~~(this._canvasRef.current.height / 100 * ~~(Math.random() * 99) + 1);\n  };\n\n  animate = () => {\n    this.setState({ isRunning: true });\n    const { currentAlgorithmIndex } = this.state;\n    const raf = window.requestAnimationFrame(this.animate);\n    if (this._frame <= 0) {\n      this._frame++;\n      return;\n    }\n\n    this._frame = 0;\n    this._canvasCtx.clearRect(0, 0, this._canvasRef.current.width, this._canvasRef.current.height);\n\n    this.algorithmMap[currentAlgorithmIndex](this._arr);\n\n    this._arr.forEach((col, index) => {\n      col.update(index);\n    });\n\n    if (this._oldVal === JSON.stringify(this._arr)) {\n      window.cancelAnimationFrame(raf);\n      this._arr = [];\n      this.setState({ isRunning: false });\n    }\n  };\n\n  init = () => {\n    for (let i = 0; i < MAX_COLS; i++) {\n      this._arr.push(new Col(this.randomize(), this._canvasCtx, this._canvasRef.current.width));\n    }\n  };\n\n  render() {\n    const { currentAlgorithmIndex, count, isRunning } = this.state;\n    return (\n      <div className=\"App\">\n        <h1 className=\"H1\">{ ALGORITHM_NAME_MAP[currentAlgorithmIndex] }\n          <small className='Small'>({ count })</small>\n        </h1>\n        <div className=\"Controls\">\n          <button disabled={ isRunning } onClick={ this.prevClick }>Prev</button>\n          <button disabled={ isRunning } onClick={ this.nextClick }>Next</button>\n        </div>\n        <canvas ref={ this._canvasRef } className=\"Canvas\" width={ window.innerWidth } height={ window.innerHeight }/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}